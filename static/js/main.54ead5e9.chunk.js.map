{"version":3,"sources":["TimerLength.js","Timer.js","TimerControls.js","PomodoroClock.js","index.js"],"names":["TimerLength","props","id","className","label","decrementButton","onClick","handleClick","timerLengthId","length","incrementButton","Timer","minutes","seconds","TimerControls","startStopTimer","class","icon","PomodoroClock","state","sessionLength","breakLength","timerMinutes","timerSeconds","isPlaying","intervalId","timerLabel","bind","event","target","this","setState","String","Number","clearInterval","sound","pause","currentTime","setInterval","play","timerLength","src","ref","audioClip","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.54ead5e9.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nfunction TimerLength(props){ \r\n    return (\r\n      <div id={props.id}>\r\n        <h2 className='lengthLabels'>{props.label}</h2>\r\n        <div className='lengthControls'>\r\n          <button id={props.decrementButton} onClick={props.handleClick}>-</button>\r\n          <h3 id={props.timerLengthId}>{props.length}</h3>\r\n          <button id={props.incrementButton} onClick={props.handleClick}>+</button>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  export default TimerLength;","import React from 'react';\r\n\r\nfunction Timer(props){\r\n    return (\r\n      <div id='timer-container'>\r\n        <h2 id='timer-label'>{props.label}</h2>\r\n        <h1 id=\"time-left\">{props.minutes}:{props.seconds}</h1>\r\n      </div>\r\n    )\r\n  }\r\n\r\nexport default Timer;","import React from 'react';\r\nfunction TimerControls(props){ \r\n    return(\r\n      <div id=\"controls-container\">\r\n        <button id=\"start_stop\" onClick={props.startStopTimer} class={props.icon}></button>\r\n        <button id=\"reset\" onClick={props.handleClick} class='fas fas fa-sync-alt'></button>\r\n      </div>\r\n    )\r\n  }\r\nexport default TimerControls;","import React from 'react';\r\nimport TimerLength from './TimerLength'\r\nimport Timer from './Timer'\r\nimport TimerControls from './TimerControls'\r\nimport './App.css';\r\n\r\n\r\nclass PomodoroClock extends React.Component{\r\n  constructor(props){\r\n    super(props)\r\n    this.state = {\r\n      sessionLength: 25,\r\n      breakLength: 5,\r\n      timerMinutes: 25,\r\n      timerSeconds: '00',\r\n      isPlaying: false,\r\n      intervalId: '',\r\n      timerLabel: 'Session'\r\n    }\r\n    this.handleClick = this.handleClick.bind(this);\r\n    this.startStopTimer = this.startStopTimer.bind(this);\r\n  }\r\n  handleClick(event){  \r\n    switch(event.target.id){   \r\n      case 'break-decrement':\r\n        this.setState(state => {\r\n          if(state.breakLength > 1){\r\n            return{breakLength: state.breakLength - 1}\r\n          }\r\n        })\r\n        break;\r\n      case 'break-increment':\r\n        this.setState(state => {\r\n          if(state.breakLength < 60){\r\n            return{breakLength: state.breakLength + 1}\r\n          }\r\n        })\r\n        break;\r\n      case 'session-decrement':\r\n        this.setState(state => {\r\n          if(state.sessionLength > 1){\r\n            return {\r\n              sessionLength: state.sessionLength - 1,\r\n              timerMinutes: state.timerMinutes < 11? '0'+String(state.timerMinutes-1): state.timerMinutes-1\r\n            }\r\n          }\r\n        })\r\n        break;\r\n      case 'session-increment':\r\n        this.setState(state => {\r\n          if(state.sessionLength < 60){\r\n            return{\r\n              sessionLength: state.sessionLength + 1,\r\n              timerMinutes: state.timerMinutes < 9? '0'+String(Number(state.timerMinutes)+1): Number(state.timerMinutes)+1\r\n            }\r\n          }\r\n        })\r\n        break;\r\n      case 'reset':\r\n        clearInterval(this.state.intervalId)\r\n         this.setState(state => ({\r\n          sessionLength: 25,\r\n          breakLength: 5,\r\n          timerMinutes: 25,\r\n          timerSeconds: '00',\r\n          isPlaying: false,\r\n          timerLabel: 'Session'\r\n        }))\r\n        this.sound.pause();\r\n        this.sound.currentTime=0;\r\n        break; \r\n    }\r\n  }\r\n  startStopTimer(){\r\n    if(!this.state.isPlaying){\r\n      this.setState(state => ({\r\n          isPlaying: true,\r\n          intervalId: setInterval(()=>{\r\n        if(this.state.timerSeconds == 0 && this.state.timerMinutes!=Number('00')){\r\n          this.setState(state => ({\r\n            timerSeconds: 59, \r\n            timerMinutes: state.timerMinutes < 11? '0'+String(state.timerMinutes-1): state.timerMinutes-1\r\n          }))\r\n        }else if(this.state.timerSeconds == 0 && this.state.timerMinutes==Number('00')){   \r\n          this.sound.play();\r\n          this.setState(state => ({\r\n            timerLabel: state.timerLabel=='Session'? 'Break': 'Session',\r\n            timerSeconds: '00', \r\n            timerMinutes: state.timerLabel=='Session'?\r\n            state.breakLength < 10? '0'+String(state.breakLength):state.breakLength:\r\n            state.sessionLength < 10? '0'+String(state.sessionLength):state.sessionLength\r\n          }))\r\n        }else{\r\n          this.setState(state => ({\r\n            timerSeconds: state.timerSeconds < 11? '0'+String(state.timerSeconds-1): state.timerSeconds-1, \r\n          }))\r\n        }       \r\n      }, 1000)\r\n      }))  \r\n    } else {\r\n      clearInterval(this.state.intervalId)\r\n      this.setState({isPlaying: false})\r\n    } \r\n  }\r\n  render(){\r\n    const {sessionLength, breakLength, isPlaying, timerMinutes, timerSeconds, timerLabel} = this.state;\r\n    return (\r\n      <div id=\"clock\">\r\n        <h1 id='title'>Pomodoro Clock</h1>\r\n        <div id='timer-length-container'>\r\n          <TimerLength \r\n            label='Break Length'\r\n            id='break-label'\r\n            decrementButton='break-decrement'\r\n            incrementButton='break-increment'\r\n            length={breakLength}\r\n            timerLengthId='break-length'\r\n            handleClick={this.handleClick}\r\n          />\r\n          <TimerLength \r\n            label='Session Length'\r\n            id='session-label'\r\n            decrementButton='session-decrement'\r\n            incrementButton='session-increment'\r\n            length={sessionLength}\r\n            timerLengthId='session-length'\r\n            handleClick={this.handleClick}\r\n          />\r\n        </div>\r\n        <Timer\r\n          label={timerLabel}\r\n          timerLength={sessionLength}\r\n          minutes={timerMinutes}\r\n          seconds = {timerSeconds}\r\n        />\r\n        <TimerControls\r\n          icon={isPlaying ? 'far fa-pause-circle' : 'fas fa-play-circle'}\r\n          handleClick={this.handleClick}\r\n          startStopTimer={this.startStopTimer}\r\n        />\r\n        <audio \r\n          id=\"beep\" \r\n          src=\"https://freesound.org/data/previews/213/213795_4001802-lq.mp3\"\r\n          ref={(audioClip) => { this.sound = audioClip; }}\r\n          />\r\n      </div>    \r\n    )\r\n  }\r\n}\r\n\r\nexport default PomodoroClock;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport PomodoroClock from './PomodoroClock';\r\n\r\n\r\nReactDOM.render(<PomodoroClock />, document.getElementById('root'));\r\n\r\n\r\n"],"sourceRoot":""}